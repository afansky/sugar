# encoding: utf-8

require "bundler/capistrano"
#require 'new_relic/recipes'

default_run_options[:pty] = true

set :application, "sugar"
set :runner,      "app"
set :user,        "app"
set :use_sudo,    false

set :scm,                   "git"
set :repository,            "git@github.com:elektronaut/sugar.git"
set :branch,                "master"
set :deploy_via,            :remote_cache
set :git_enable_submodules, 1

role :app, "addsugar.me"
role :web, "addsugar.me"
role :db,  "addsugar.me", :primary => true

# If you aren't deploying to /u/apps/#{application} on the target
# servers (which is the default), you can specify the actual location
# via the :deploy_to variable:
#set :deploy_to, "/var/www/#{application}"

desc "Create shared directories"
task :create_shared_dirs, :roles => [:web,:app] do
  run "mkdir #{deploy_to}/#{shared_dir}/cache"
  run "mkdir #{deploy_to}/#{shared_dir}/public_cache"
  run "mkdir #{deploy_to}/#{shared_dir}/sockets"
  run "mkdir #{deploy_to}/#{shared_dir}/sessions"
  #run "mkdir #{deploy_to}/#{shared_dir}/solr"
  run "mkdir #{deploy_to}/#{shared_dir}/config"
  run "mkdir #{deploy_to}/#{shared_dir}/config/initializers"
  run "touch #{deploy_to}/#{shared_dir}/config/database.yml"
  run "touch #{deploy_to}/#{shared_dir}/config/initializers/mailer.rb"
end

desc "Create symlinks"
task :create_symlinks, :roles => [:web,:app] do
  run "ln -s #{deploy_to}/#{shared_dir}/cache        #{deploy_to}/#{current_dir}/tmp/cache"
  run "ln -s #{deploy_to}/#{shared_dir}/sockets      #{deploy_to}/#{current_dir}/tmp/sockets"
  run "ln -s #{deploy_to}/#{shared_dir}/sessions     #{deploy_to}/#{current_dir}/tmp/sessions"
  run "ln -s #{deploy_to}/#{shared_dir}/public_cache #{deploy_to}/#{current_dir}/public/cache"
  run "ln -s #{deploy_to}/#{shared_dir}/doodles      #{deploy_to}/#{current_dir}/public/doodles"
  #run "ln -s #{deploy_to}/#{shared_dir}/solr         #{deploy_to}/#{current_dir}/solr"
end

desc "Symlink configs"
task :symlink_configs, :roles => [:web, :app] do
  run "ln -nsf #{shared_path}/config/database.yml             #{release_path}/config/database.yml"
  run "ln -nsf #{shared_path}/config/newrelic.yml             #{release_path}/config/newrelic.yml"
  run "ln -nsf #{shared_path}/config/sunspot.yml              #{release_path}/config/sunspot.yml"
  run "ln -nsf #{shared_path}/config/initializers/mailer.rb   #{release_path}/config/initializers/mailer.rb"
  run "ln -nsf #{shared_path}/config/initializers/sugar.rb    #{release_path}/config/initializers/sugar.rb"
end

desc "Packs themes"
task :pack_themes, :roles => [:web] do
  run("cd #{deploy_to}/current; bundle exec rake sugar:pack_themes RAILS_ENV=production")
end

namespace :deploy do
  namespace :web do
    desc "Present a maintenance page to visitors. Message is customizable with the REASON enviroment variable."
    task :disable, :roles => [:web, :app] do
      if reason = ENV['REASON']
        run("cd #{deploy_to}/current; bundle exec rake sugar:disable_web REASON=\"#{reason}\" RAILS_ENV=production")
      else
        run("cd #{deploy_to}/current; bundle exec rake sugar:disable_web RAILS_ENV=production")
      end
    end

    desc "Makes the application web-accessible again."
    task :enable, :roles => [:web, :app] do
      run("cd #{deploy_to}/current; bundle exec rake sugar:enable_web RAILS_ENV=production")
    end
  end

  desc "Precompile assets"
  task :precompile_assets do
    run "cd #{release_path}; RAILS_ENV=production bundle exec rake assets:precompile"
  end

  desc "Restart Application"
  task :restart, :roles => :app do
    run "touch #{current_path}/tmp/restart.txt"
  end
end

after "deploy:finalize_update", "symlink_configs"
after "deploy:finalize_update", "deploy:precompile_assets"

after "deploy:setup",           "create_shared_dirs"
after "deploy:create_symlink",  "create_symlinks"
after "deploy:create_symlink",  "pack_themes"

# Memcached
#after "deploy:restart", "memcached:restart"
